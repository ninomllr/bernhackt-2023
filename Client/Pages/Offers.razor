@page "/offers/{ParamId}"

@using thorstopper.Client.Services
@using thorstopper.Client.Data
@using System.Globalization

<PageTitle>Angebotsübersicht</PageTitle>

<h1>Angebotsübersicht</h1>
<MudText Class="pb-4">Folgende Angebote wurden für den Schadensfall ausgewählt.</MudText>

<MudGrid>
  @foreach (var item in @Elements)
  {
              <MudItem xs="4" Class="d-flex justify-content-center">
                  <MudCard Outlined="true" Style="position: relative;">
                      <MudCardContent Style="height: 85%;">
                          <MudText>
                              <strong>Anbieter:</strong>
                          </MudText>
                          <MudText Typo="Typo.body2">@item.ServiceProviderName, @item.ServiceProviderAddress</MudText>
                          <MudText>&nbsp;</MudText>
                          <MudText>
                              <strong>Angebotsübersicht:</strong>
                          </MudText>
                          <MudText Typo="Typo.body2">
                              <ul>
              @foreach (var listing in @item.OfferDescription)
              {
                                            <li>@listing</li>
              }
                              </ul>
                          </MudText>
                          <MudText>&nbsp;</MudText>
                          <MudText Class="pb-2">
                              <strong>Offertenpreis:</strong>
                          </MudText>
                          <MudChip Variant="Variant.Outlined">@item.OfferPrice.ToString("C2", CultureInfo.CreateSpecificCulture("de-CH"))</MudChip>
                          <MudText>&nbsp;</MudText>
          @if (@item.BountyPrice != 0)
          {
                                    <MudText>
                                        <strong>Bounty:</strong>
                                    </MudText>
                                    <MudText Typo="Typo.body2" Class="pb-2">
                                        Aufgrund der Distanz wird folgendes
                                        Bounty
                                        vorgeschlagen.
                                    </MudText>
                                    <MudChip Variant="Variant.Outlined" Color="Color.Success">@item.BountyPrice.ToString("C2", CultureInfo.CreateSpecificCulture("de-CH"))</MudChip>
          }
                      </MudCardContent>
                      <MudCardActions Class="object-position: bottom;">
                          <MudButton Variant="Variant.Text" Color="Color.Secondary">Anbieter kontaktieren</MudButton>
                          <MudButton Variant="Variant.Text" Color="Color.Primary">PDF Herunterladen</MudButton>
                      </MudCardActions>
                  </MudCard>
              </MudItem>
  }

    <MudItem xs="12">
      <MudButton Variant="Variant.Filled"  OnClick="@(() => NavigateBack(@ParamId))" Class="mr-6">Zurück</MudButton>
    </MudItem>
</MudGrid>


@code {

  [Inject]
  NavigationManager NavigationManager { get; set; }

  [Inject]
  IOfferService OfferServiceInstance { get; set; }

  [Parameter]
  public string ParamId { get; set; }
  public int Id { get { return Int32.Parse(ParamId); } }


  private IEnumerable<Offer> Elements;

  protected override async void OnInitialized()
  {
    Elements = await OfferServiceInstance.GetOffers();
  }

  private async Task NavigateBack(string param)
  {
    NavigationManager.NavigateTo("/case-detail/" + param, forceLoad: false);
  }

}